{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport { User } from \"../Models/User\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./logger.service\";\nexport class UserService {\n  constructor(logger) {\n    this.logger = logger;\n    this.users = [new User('Steve Smith', 'Male', 'Monthly', 'Active'), new User('Semina Dilhara', 'Male', 'Yearly', 'Inactive'), new User('Mqark Tyler', 'Female', 'Quaterly', 'Active')];\n    this.OnUserDetailsClicked = new EventEmitter();\n  }\n  OnShowUserDetails(user) {\n    this.OnUserDetailsClicked.emit(user);\n  }\n  GetAllUser() {\n    return this.users;\n  }\n  CreateUser(name, gender, subType, status) {\n    let user = new User(name, gender, subType, status);\n    this.users.push(user);\n    this.logger.LoggerMessage(name, status);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.LoggerService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac\n  });\n}","map":{"version":3,"names":["EventEmitter","User","UserService","constructor","logger","users","OnUserDetailsClicked","OnShowUserDetails","user","emit","GetAllUser","CreateUser","name","gender","subType","status","push","LoggerMessage","_","i0","ɵɵinject","i1","LoggerService","_2","factory","ɵfac"],"sources":["D:\\Angular Tutorial\\Git Hub\\Angular_Section\\angular-services-dependency-injection\\src\\app\\Services\\user.service.ts"],"sourcesContent":["import { EventEmitter, Injectable } from \"@angular/core\";\r\nimport { User } from \"../Models/User\";\r\nimport { LoggerService } from \"./logger.service\";\r\n\r\n@Injectable()\r\nexport class UserService{\r\n   users: User[] = [\r\n    new User('Steve Smith','Male','Monthly','Active'),\r\n    new User('Semina Dilhara','Male','Yearly','Inactive'),\r\n    new User('Mqark Tyler','Female','Quaterly','Active')\r\n   ];\r\n\r\n   constructor(private logger: LoggerService){\r\n\r\n   }\r\n\r\n   OnUserDetailsClicked: EventEmitter<User> = new EventEmitter<User>();\r\n\r\n   OnShowUserDetails(user : User){\r\n    this.OnUserDetailsClicked.emit(user);\r\n   }\r\n\r\n   GetAllUser(){\r\n    return this.users;\r\n   }\r\n\r\n   CreateUser(name:string,gender:string,subType:string,status:string){\r\n    let user = new User(name,gender,subType,status);\r\n    this.users.push(user);\r\n\r\n    this.logger.LoggerMessage(name,status);\r\n   }\r\n}"],"mappings":"AAAA,SAASA,YAAY,QAAoB,eAAe;AACxD,SAASC,IAAI,QAAQ,gBAAgB;;;AAIrC,OAAM,MAAOC,WAAW;EAOrBC,YAAoBC,MAAqB;IAArB,KAAAA,MAAM,GAANA,MAAM;IAN1B,KAAAC,KAAK,GAAW,CACf,IAAIJ,IAAI,CAAC,aAAa,EAAC,MAAM,EAAC,SAAS,EAAC,QAAQ,CAAC,EACjD,IAAIA,IAAI,CAAC,gBAAgB,EAAC,MAAM,EAAC,QAAQ,EAAC,UAAU,CAAC,EACrD,IAAIA,IAAI,CAAC,aAAa,EAAC,QAAQ,EAAC,UAAU,EAAC,QAAQ,CAAC,CACpD;IAMD,KAAAK,oBAAoB,GAAuB,IAAIN,YAAY,EAAQ;EAFnE;EAIAO,iBAAiBA,CAACC,IAAW;IAC5B,IAAI,CAACF,oBAAoB,CAACG,IAAI,CAACD,IAAI,CAAC;EACrC;EAEAE,UAAUA,CAAA;IACT,OAAO,IAAI,CAACL,KAAK;EAClB;EAEAM,UAAUA,CAACC,IAAW,EAACC,MAAa,EAACC,OAAc,EAACC,MAAa;IAChE,IAAIP,IAAI,GAAG,IAAIP,IAAI,CAACW,IAAI,EAACC,MAAM,EAACC,OAAO,EAACC,MAAM,CAAC;IAC/C,IAAI,CAACV,KAAK,CAACW,IAAI,CAACR,IAAI,CAAC;IAErB,IAAI,CAACJ,MAAM,CAACa,aAAa,CAACL,IAAI,EAACG,MAAM,CAAC;EACvC;EAAC,QAAAG,CAAA,G;qBA1BShB,WAAW,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXrB,WAAW;IAAAsB,OAAA,EAAXtB,WAAW,CAAAuB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}